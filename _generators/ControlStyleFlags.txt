//Common control style flags. dialog* and want* flags are not used directly, they are used trough virt fns getDialogResultFlags/getWantKeyFlags, which can be overriden in childs

invalid,unknown=-1
None,NoFlags=0
PaintTransparent=1      // When drawing, it does not draw its background, only child controls are drawn
HitTransparent=2        // When checking coordinate hits (hit test), if a point does not hits on any of the child controls, then it is not considered a hit on the control
TransparentControl=3    // Combination of PaintTransparent|HitTransparent flags
Group,GroupStart=4      // Starts the control group
TabStop                 // Allow the control to be in tab navigation list
FocusLess,CantOwnFocus  // Control can't own the input focus
ControlParent,ControlContainer,Container // Acts as control container, not a single (possible compaund) control

# Here goes flags as enum in flags enum. 
DialogResultNone                                                =0     // Clicking/pushing this control don't close the dialog
DialogResultButton,DlgResultButton                              =0x400 // (:close) Clicking/pushing this control closes the dialog, and dlgResultCode (EDialogResult) control field used as result code. This control does not have to be an any kind of button.
DialogDefButton,DlgDefButton                                    =0x800 // (:close, :default-ok) If any of window controls have set this flags combination, it's dlgResultCode (EDialogResult) is used to close the dialog while user presses Enter. Only first found control's dlgResultCode with this flag is used. This control does not have to be an any kind of button.
DialogCancelButton,DlgCancelButton,DialogEscButton,DlgEscButton,DialogEscapeButton,DlgEscapeButton =0xC00 // (:close, :default-cancel) If any of window controls have set this flags combination, it's dlgResultCode (EDialogResult) is used to close the dialog while user presses Escape. Only first found control's dlgResultCode with this flag is used. This control does not have to be an any kind of button.
DialogResultFlagsMask                                           =0xC00 // Mask for "dialog*" sub-enum

# Here goes flags as enum in flags enum
wantArrows          =0x1000   // Want arrow (direction) keys press/unpress events
wantChars           =0x2000   // Want char input messages
wantTab             =0x3000   // Want Tab key messages
wantReturn,wantCr   =0x4000   // Want Enter key messages
wantEscape,wantEsc  =0x4000   // Want Escape key messages
wantAllKeys         =0x5000   // Want all keyboard input

wantKeyFlagsMask=0xF000   // Mask for "want*" sub-enum


# First user flag value
userFirst=0x10000      // First user flag value



#DLGC_WANTALLKEYS 0x0004   All keyboard input.
#DLGC_WANTARROWS  0x0001   Direction keys.
#DLGC_WANTCHARS   0x0080   WM_CHAR messages.
#DLGC_WANTMESSAGE 0x0004   All keyboard input (the application passes this message in the MSG structure to the control).
#DLGC_WANTTAB     0x0002   TAB key.
